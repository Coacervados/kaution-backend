generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime?       @default(now())
  updateAt      DateTime?       @updatedAt
  Inventory     Inventory[]
  Notifications Notifications[]
  Product       Product[]
}

model Inventory {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  name        String
  description String?
  updateAt    DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  categories  Category[]
  Product     Product[]
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String?
  userId      String
  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)
  inventoryId String
  products    Product[]
  created     DateTime  @default(now())
  updateAt    DateTime  @updatedAt
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String?
  quantity    Int
  seducCode   String?
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)
  inventoryId String
  created     DateTime  @default(now())
  updateAt    DateTime  @updatedAt
}

model Notifications {
  id       String   @id @default(uuid())
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  message  String
  sendAt   DateTime @default(now())
  viewedAt DateTime @default(now())
  viewed   Boolean  @default(false)
}
